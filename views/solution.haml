.row
  .span8
    %h3
      Crafting: #{targets.to_sentence}
    - if tier > 0
      %h4 
        Solved to:
        = I18n.t("tiers.t#{tier}")
    - unless forbidden_machines.blank?
      %h4
        Excluding: #{forbidden_machines.to_sentence}
    - unless excluded_mods.blank?
      %h4
        Without:
        = excluded_mods.map { |m| I18n.t("clusters.#{m}") }.to_sentence
  .span4
    %a.btn.btn-info(href="/") Craft something else
.row
  .span4
    %h4 Required resources
    %table.table
      %thead
        %tr
          %th Item
          %th Count
          %th Stacks
      %tbody
        - raw.each do |name, count, stack_info|
          %tr
            %td= name
            %td= count
            %td= stack_info
  .span8
    .row
      .span4
        %h4 Crafting sequence
      .span4
        %label(for="toggle_sort")
          %input#toggle_sort(type="checkbox")
          sort by tiers
    .row
      %table.table
        %thead
          %tr.row
            %th #
            %th Craft
            %th Machine
            %th From
        %tbody#craftseq
          - crafts.each_with_index do |step, index|
            %tr.row.solution-row{class: [('success' if targets.include? step.result.to_s)], data: {tier: step.result.tier, index: index}}
              %td.step= step.num 
              %td
                = step.count if step.count > 1
                - if targets.include? step.result.to_s
                  %strong= step.result
                - else
                  = step.result.inspect
              %td= step.machine
              %td
                = step.ingredients
:javascript
  $(function() {
    $('input#toggle_sort').on('change', function() {
      var rows = $('tr.solution-row').detach();
      if ($(this).is(':checked')) {
        rows = _.sortBy(rows, function(e) { return Number(e.dataset.tier) });
        $('#craftseq').append(rows);
      } else {
        rows = _.sortBy(rows, function(e) { return Number(e.dataset.index) });
        $('#craftseq').append(rows);
      }
    });
  });
